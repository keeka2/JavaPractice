4가지 특징
캡슐화
  - 접근제어자를 어디에 붙여 사용할지 (public, private, default, private)
  - 변수(private), 메소드(public)을 활용하여 변수에 직접 접근 못하도록 만드는 것

은닉화
  - 안보이는것 ! 캡슐화는 접근을 못하는 것
  - inner class(클래스에 private 사용 가능)
 
상속
  - 클래스를 확장하는 방법
  - 클래스 재사용
  - 클래스는 하나의 클래스만 상속받을 수 있다
  - 상속을 받지않는 모든 클래스는 Object 클래스를 상속받는다

다형성
  - 상속관계가 맺어진 클래스에서 조상의 참조 변수로 자손의 객체를 참조하는 것
   ex) Tv t1 = new LgTv(); int a = (int)5.6;
  - 오버라이딩된 메소드 사용
  - 매개변수 / 리턴타입 / 인터페이스 ...다형성이 있을 수 있음

추상화
  - 메소드가 구현부가 없는것(추상 메소드)
  - 인터페이스나 / 추상클래스(하나이상의 추상메서드가 있는 경우)
  - 상수/추상메소드 모음 == 인터페이스
  - 프레임워크